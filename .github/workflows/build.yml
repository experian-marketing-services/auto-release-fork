name: build

on:
  # push:
  #   branches: [main, next]
  # pull_request:
  #   types: [opened, synchronize, reopened]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        required: false

# Enabled permissions on GITHUB_TOKEN
permissions:
  # To be able to push to the repo
  contents: write
  # To update the pr description with canary info
  pull-requests: write
  # For pr-check to create a status
  statuses: write
  # Needed to create PR statuses/checks
  checks: write
  # To post comments on PRs
  issues: write

jobs:
  # # Run install in one step so deps can be cached for other steps
  # install:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v5
  #     - uses: ./.github/actions/install-deps

  # build:
  #   runs-on: ubuntu-latest
  #   needs: install
  #   steps:
  #     - uses: actions/checkout@v5
  #     - name: Prepare repository
  #       run: git fetch --unshallow --tags
  #     - uses: ./.github/actions/install-deps
  #     - uses: ./.github/actions/build-cache
  #     - run: yarn build
  #     - run: yarn lerna run bundle --scope=auto
  #       env: 
  #         NEXT_VERSION: ${{ github.event.inputs.version }}
  #   env:
  #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # pr-check:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - uses: actions/checkout@v5
  #     - uses: ./.github/actions/install-deps
  #     - uses: ./.github/actions/build-cache
  #     - uses: 8BitJonny/gh-get-current-pr@2.2.0
  #       id: PR
  #     - run: echo "$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"
  #     - run: yarn auto pr-check --pr $PR --url "$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"
  #       env:
  #         PR: ${{ steps.PR.outputs.number }}
  #   env:
  #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # lint:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - uses: actions/checkout@v5
  #     - uses: ./.github/actions/install-deps
  #     - uses: ./.github/actions/build-cache
  #     - run: yarn lint

  # test:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - uses: actions/checkout@v5
  #     - uses: ./.github/actions/install-deps
  #     - uses: ./.github/actions/build-cache
  #     - name: Prepare repository
  #       run: git fetch --unshallow --tags
  #     - run: yarn test
      # - run: yarn test:coverage
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # - name: Send CodeCov Results
      #   run: bash <(curl -s https://codecov.io/bash) -t $CODECOV_KEY

  release:
    runs-on: ubuntu-latest
    # if: "!contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'skip ci')"
    # needs: build
    steps:
      - uses: actions/checkout@v5
      - name: Set up GitHub credentials for Auto
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
      - uses: 8BitJonny/gh-get-current-pr@2.2.0
        id: PR
        with:
          filterOutClosed: true
          sha: ${{ github.event.pull_request.head.sha }}
      - uses: ./.github/actions/install-deps
      - uses: ./.github/actions/build-cache
      - run: git remote -v
      - name: Prepare repository
        run: git fetch --unshallow --tags
      - name: Build
        run: yarn build
      - name: Bundle
        run: yarn lerna run bundle --scope=auto
        env: 
          NEXT_VERSION: ${{ github.event.inputs.version }}
      - name: Create Release
        run: yarn auto latest -v
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PROTECTED_BRANCH_REVIEWER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR: ${{ steps.PR.outputs.number }}
